@model SourceDetailsViewModel

<div class="card">
    <div class="card-header bg-info text-white">
        <h5>@Model.SourceName</h5>
    </div>
    <div class="card-body">
        <p>@Model.Description</p>

        <h6>@Model.SourceName's Energy Production</h6>
        <div class="chart-container" style="position: relative; height:400px; width:100%; min-height: 400px;">
            <canvas id="energyChart1" style="display: block; height: 100%; width: 100%;"></canvas>
            @* <canvas id="energyChart2" style="display: block; height: 100%; width: 100%;"></canvas> *@
        </div>

        <div class="card-body px-0 py-4">
            <h6>@Model.SourceName's Energy Production Vs Total Re-Energy Production Data</h6>
        <div class="chart-container" style="position: relative; height:400px; width:100%; min-height: 400px;">
            @* <canvas id="energyChart1" style="display: block; height: 100%; width: 100%;"></canvas> *@
            <canvas id="energyChart2" style="display: block; height: 100%; width: 100%;"></canvas>
        </div>
        </div>
        <div id="chartError" class="alert alert-danger mt-3" style="display: none;"></div>
    </div>
</div>


    <script>
    //         function generateColors(count) {
    //     const colors = [];
    //     const baseColors = [
    //         'rgba(255, 99, 132, 0.5)',
    //         'rgba(54, 162, 235, 0.5)',
    //         'rgba(255, 206, 86, 0.5)',
    //         'rgba(75, 192, 192, 0.5)',
    //         'rgba(153, 102, 255, 0.5)',
    //         'rgba(255, 159, 64, 0.5)'
    //     ];

    //     for (let i = 0; i < count; i++) {
    //         colors.push(baseColors[i % baseColors.length]);
    //     }
    //     return colors;
    // }


        document.addEventListener('DOMContentLoaded', function() {
            try {
                const ctx = document.getElementById('energyChart1');
                const ctx2 = document.getElementById('energyChart2');
                if (!ctx) {
                    throw new Error("Chart canvas element not found");
                }

                // Safely get data with fallbacks
                const years = @Html.Raw(Json.Serialize(Model.ProductionData?.Select(m => m.Year) ?? []));
                const values = @Html.Raw(Json.Serialize(Model.ProductionData?.Select(m => m.Value) ?? []));
                const val = @Html.Raw(Json.Serialize(@Model.SourceName));
                console.log(val);
                const landfillGases = @Html.Raw(Json.Serialize(Model.ProductionData?.Select(m => m.RenewableWasteEnergy) ?? []));

                // Validate data
                if (!years || !years.length || !values || !values.length) {
                    throw new Error("Incomplete chart data");
                }

                new Chart(ctx.getContext('2d'), {
                    type: 'bar',
                    data: {
                        labels: years,
                        datasets: [
                            {
                                label: val+' (Mtoe)',
                                data: values,
                                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            }
                            // ,
                            // {
                            //     label: 'Net Renewable Energy Produced',
                            //     data: landfillGases,
                            //     backgroundColor: 'rgba(255, 99, 132, 0.5)',
                            //     borderColor: 'rgba(255, 99, 132, 1)',
                            //     borderWidth: 1,
                            //     type: 'line'
                            // }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: false
                            }
                        }
                    }
                });

                new Chart(ctx2.getContext('2d'), {
                    type: 'bar',
                    data: {
                        labels: years,
                        datasets: [
                            {
                                label: val+' (Mtoe)',
                                data: values,
                                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            },
                                {
                                label: 'Net Renewable Energy Produced',
                                data: landfillGases,
                                backgroundColor: 'rgba(255, 99, 132, 0.5)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1,
                                type: 'line'
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: false
                            }
                        }
                    }
                });
            } catch (error) {
                console.error("Chart initialization failed:", error);
                document.getElementById('chartError').style.display = 'block';
                document.getElementById('chartError').textContent =
                    'Error loading chart: ' + error.message;
            }
        });
    </script>
